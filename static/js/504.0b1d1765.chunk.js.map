{"version":3,"file":"static/js/504.0b1d1765.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/MovieGallery/MovieGallery.module.css?cb9b","components/MovieGallery/MovieGallery.js","webpack://react-homework-template/./src/components/Searchbar/Searchbar.module.css?8d9e","components/Icons/SearchIcon.js","components/Searchbar/Searchbar.js","pages/Movie/Movies.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"MovieGallery_container__I8Qgp\",\"gallery\":\"MovieGallery_gallery__Oyx2w\",\"item\":\"MovieGallery_item__4tR9S\",\"customButton\":\"MovieGallery_customButton__CNrzV\",\"link\":\"MovieGallery_link__CmVj8\",\"active\":\"MovieGallery_active__1x1lu\"};","// import { Link } from 'react-router-dom';\n// import PropTypes from 'prop-types';\n// import MovieIcon from 'components/Icons/MovieIcon';\n// import { useLocation } from 'react-router-dom';\n// import css from './MovieGallery.module.css';\n// const MovieGallery = ({ movies }) => {\n//   const location = useLocation();\n//   return (\n//     <div>\n//       <ul className={css.gallery}>\n//         {movies.map(movie => (\n//           <li className={css.item} key={movie.id}>\n//             <Link\n//               className={css.link}\n//               to={`/movies/${movie.id}`}\n//               state={{ from: location }}\n//             >\n//               <MovieIcon />\n//               {movie.title}\n//             </Link>\n//           </li>\n//         ))}\n//       </ul>\n//     </div>\n//   );\n// };\n// MovieGallery.propTypes = {\n//   movies: PropTypes.arrayOf(\n//     PropTypes.shape({\n//       id: PropTypes.number.isRequired,\n//       title: PropTypes.string.isRequired,\n//     })\n//   ).isRequired,\n// };\n\n// export default MovieGallery;\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport MovieIcon from 'components/Icons/MovieIcon';\nimport css from './MovieGallery.module.css';\n\nconst MovieGallery = ({ movies }) => {\n  return (\n    <div>\n      <ul className={css.gallery}>\n        {movies.map(movie => (\n          <li className={css.item} key={movie.id}>\n            <Link className={css.link} to={`/movies/${movie.id}`}>\n              <MovieIcon />\n              {movie.title}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nMovieGallery.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\n\nexport default MovieGallery;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"Searchbar_form__D-hp5\",\"input\":\"Searchbar_input__19umw\",\"button\":\"Searchbar_button__nkcjk\",\"customButton\":\"Searchbar_customButton__kAZ-N\",\"link\":\"Searchbar_link__EA4he\"};","const SearchIcon = () => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 16 16\"\n      height=\"26\"\n      width=\"26\"\n    >\n      <defs id=\"defs3051\" fill=\"#ffffff\">\n        <style type=\"text/css\" id=\"current-color-scheme\" fill=\"#ffffff\"></style>\n      </defs>\n      <path\n        d=\"M 6.5 2 C 4.007 2 2 4.01 2 6.5 C 2 8.993 4.01 11 6.5 11 C 7.5636432 11 8.5263409 10.618801 9.2949219 10.005859 L 13.292969 14.003906 L 14 13.296875 L 10.001953 9.2988281 C 10.617604 8.529048 11 7.565338 11 6.5 C 11 4.007 8.99 2 6.5 2 z M 6.5 3 C 8.439 3 10 4.561 10 6.5 C 10 8.439 8.439 10 6.5 10 C 4.561 10 3 8.439 3 6.5 C 3 4.561 4.561 3 6.5 3 z \"\n        className=\"ColorScheme-Text\"\n        fill=\"#ffffff\"\n      ></path>\n    </svg>\n  );\n};\nexport default SearchIcon;\n","import { useEffect, useState } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport css from './Searchbar.module.css';\nimport MovieIcon from 'components/Icons/MovieIcon';\nimport SearchIcon from 'components/Icons/SearchIcon';\n\nconst Searchbar = ({ onSearch }) => {\n  const baseURL = 'https://api.themoviedb.org/3';\n  const apiKey = 'acee11b4b18b6e03b694743e5006f3ac';\n  const language = 'en-US';\n  const [query, setQuery] = useState('');\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  let location = useLocation();\n  console.log(location.state);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  useEffect(() => {\n    const queryParam = searchParams.get('query');\n\n    if (queryParam) {\n      setQuery(queryParam);\n    }\n  }, [searchParams]);\n\n  const fetchMovies = async () => {\n    try {\n      setLoading(true);\n\n      const searchParams = new URLSearchParams({\n        api_key: apiKey,\n        language: language,\n        query: query,\n        page: '1',\n        include_adult: 'false',\n      });\n\n      const response = await fetch(`${baseURL}/search/movie?${searchParams}`);\n      const moviesData = await response.json();\n      setMovies(moviesData.results);\n      console.log(moviesData.results);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    fetchMovies();\n    searchParams.set('query', query);\n    setSearchParams(searchParams);\n  };\n\n  console.log(query, movies);\n\n  return (\n    <>\n      <form className={css.form} onSubmit={handleSubmit}>\n        <input\n          className={css.input}\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search movies\"\n          name=\"query\"\n          value={query}\n          onChange={event => setQuery(event.target.value)}\n        />\n        <button className={css.button} type=\"submit\">\n          <SearchIcon />\n          Search\n        </button>\n      </form>\n      {loading ? (\n        <p>Loading...</p>\n      ) : (\n        <ul>\n          {movies.map(movie => (\n            <li key={movie.id}>\n              <Link\n                className={css.link}\n                to={`/movies/${movie.id}`}\n                state={{ from: location }}\n              >\n                <MovieIcon />\n                {movie.title}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n};\n\nSearchbar.propTypes = {\n  onSearch: PropTypes.func.isRequired,\n};\n\nexport default Searchbar;\n","import { useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport Searchbar from 'components/Searchbar/Searchbar';\nimport MovieGallery from 'components/MovieGallery/MovieGallery';\n\nconst Movies = () => {\n  const apiKey = 'acee11b4b18b6e03b694743e5006f3ac';\n\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const location = useLocation();\n  console.log(location.state);\n  const handleSearch = async query => {\n    try {\n      setLoading(true);\n      const response = await fetch(\n        `https://api.themoviedb.org/3/search/movie?api_key=${apiKey}&query=${query}`\n      );\n      const moviesData = await response.json();\n      setMovies(moviesData.results);\n      console.log(moviesData.results);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div>\n      <Searchbar onSearch={handleSearch} state={{ from: location }} />\n      {loading && <p>Loading...</p>}\n      {!loading && <MovieGallery movies={movies} />}\n    </div>\n  );\n};\nMovies.propTypes = {\n  handleSearch: PropTypes.func,\n  movies: PropTypes.array,\n};\n\nexport default Movies;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["movies","className","css","map","movie","to","id","MovieIcon","title","xmlns","viewBox","height","width","fill","type","d","onSearch","useState","query","setQuery","setMovies","loading","setLoading","location","useLocation","console","log","state","useSearchParams","searchParams","setSearchParams","useEffect","queryParam","get","fetchMovies","URLSearchParams","api_key","language","page","include_adult","fetch","response","json","moviesData","results","onSubmit","event","preventDefault","set","autoComplete","autoFocus","placeholder","name","value","onChange","target","from","handleSearch","MovieGallery","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}