{"version":3,"file":"static/js/290.8721ed42.chunk.js","mappings":"2LACA,EAAsE,8BAAtE,EAA2G,2BAA3G,EAA+L,2B,SCkE/L,EA1BqB,SAAC,GAAgB,IAAdA,EAAa,EAAbA,OACtB,OACE,0BACE,eAAIC,UAAWC,EAAf,SACGF,EAAOG,KAAI,SAAAC,GAAK,OACf,eAAIH,UAAWC,EAAf,UACE,UAAC,KAAD,CAAMD,UAAWC,EAAUG,GAAE,kBAAaD,EAAME,IAAhD,WACE,SAACC,EAAA,EAAD,IACCH,EAAMI,UAHmBJ,EAAME,GADrB,OAWxB,C,sICvDD,EAA0E,oB,SC2C1E,EArCa,WACX,OAA4BG,EAAAA,EAAAA,UAAS,IAArC,eAAOT,EAAP,KAAeU,EAAf,KACA,GAA8BD,EAAAA,EAAAA,WAAS,GAAvC,eAAOE,EAAP,KAAgBC,EAAhB,KACMC,GAAWC,EAAAA,EAAAA,MAoBjB,OAnBAC,QAAQC,IAAIH,EAASI,QACrBC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,mCAAG,+GAEOC,MAAM,4DAAD,OAVrB,qCAQS,cAEVC,EAFU,gBAKSA,EAASC,OALlB,OAKVC,EALU,OAMhBR,QAAQC,IAAIO,GACZb,EAAUa,EAAWC,SACrBZ,GAAW,GARK,kDAUhBG,QAAQC,IAAR,MACAJ,GAAW,GAXK,0DAAH,qDAcjBO,GACD,GAAE,KAGD,8BACGR,GACC,uCAEA,iCACE,eAAIV,UAAWC,EAAf,6BACA,SAACuB,EAAA,EAAD,CAAczB,OAAQA,QAK/B,C,sBC1CD,SAAS0B,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAOC,GAEP,YADAP,EAAOO,EAET,CAEIF,EAAKG,KACPT,EAAQO,GAERG,QAAQV,QAAQO,GAAOI,KAAKT,EAAOC,EAEvC,CAEe,SAASS,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIP,SAAQ,SAAUV,EAASC,GACpC,IAAIF,EAAMc,EAAGK,MAAMJ,EAAME,GAEzB,SAASd,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CAEA,SAASJ,EAAOgB,GACdrB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASgB,EACnE,CAEAjB,OAAMkB,EACR,GACF,CACF,C","sources":["webpack://react-homework-template/./src/components/MovieGallery/MovieGallery.module.css?cb9b","components/MovieGallery/MovieGallery.js","webpack://react-homework-template/./src/pages/Home/Home.module.css?1370","pages/Home/Home.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"MovieGallery_container__I8Qgp\",\"gallery\":\"MovieGallery_gallery__Oyx2w\",\"item\":\"MovieGallery_item__4tR9S\",\"customButton\":\"MovieGallery_customButton__CNrzV\",\"link\":\"MovieGallery_link__CmVj8\",\"active\":\"MovieGallery_active__1x1lu\"};","// import { Link } from 'react-router-dom';\n// import PropTypes from 'prop-types';\n// import MovieIcon from 'components/Icons/MovieIcon';\n// import { useLocation } from 'react-router-dom';\n// import css from './MovieGallery.module.css';\n// const MovieGallery = ({ movies }) => {\n//   const location = useLocation();\n//   return (\n//     <div>\n//       <ul className={css.gallery}>\n//         {movies.map(movie => (\n//           <li className={css.item} key={movie.id}>\n//             <Link\n//               className={css.link}\n//               to={`/movies/${movie.id}`}\n//               state={{ from: location }}\n//             >\n//               <MovieIcon />\n//               {movie.title}\n//             </Link>\n//           </li>\n//         ))}\n//       </ul>\n//     </div>\n//   );\n// };\n// MovieGallery.propTypes = {\n//   movies: PropTypes.arrayOf(\n//     PropTypes.shape({\n//       id: PropTypes.number.isRequired,\n//       title: PropTypes.string.isRequired,\n//     })\n//   ).isRequired,\n// };\n\n// export default MovieGallery;\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport MovieIcon from 'components/Icons/MovieIcon';\nimport css from './MovieGallery.module.css';\n\nconst MovieGallery = ({ movies }) => {\n  return (\n    <div>\n      <ul className={css.gallery}>\n        {movies.map(movie => (\n          <li className={css.item} key={movie.id}>\n            <Link className={css.link} to={`/movies/${movie.id}`}>\n              <MovieIcon />\n              {movie.title}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nMovieGallery.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\n\nexport default MovieGallery;\n","// extracted by mini-css-extract-plugin\nexport default {\"nav\":\"Home_nav__CTTnB\",\"link\":\"Home_link__2zIq5\",\"title\":\"Home_title__L087v\"};","import MovieGallery from 'components/MovieGallery/MovieGallery';\nimport { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport css from './Home.module.css';\n\nconst apiKey = 'acee11b4b18b6e03b694743e5006f3ac';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const location = useLocation();\n  console.log(location.state);\n  useEffect(() => {\n    const fetchMovies = async () => {\n      try {\n        const response = await fetch(\n          `https://api.themoviedb.org/3/trending/movie/week?api_key=${apiKey}`\n        );\n        const moviesData = await response.json();\n        console.log(moviesData);\n        setMovies(moviesData.results);\n        setLoading(false);\n      } catch (error) {\n        console.log(error);\n        setLoading(false);\n      }\n    };\n    fetchMovies();\n  }, []);\n\n  return (\n    <>\n      {loading ? (\n        <p>Loading...</p>\n      ) : (\n        <>\n          <h1 className={css.title}>Trending today</h1>\n          <MovieGallery movies={movies} />\n        </>\n      )}\n    </>\n  );\n};\n\nexport default Home;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["movies","className","css","map","movie","to","id","MovieIcon","title","useState","setMovies","loading","setLoading","location","useLocation","console","log","state","useEffect","fetchMovies","fetch","response","json","moviesData","results","MovieGallery","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}