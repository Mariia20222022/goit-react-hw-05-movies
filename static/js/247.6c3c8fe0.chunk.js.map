{"version":3,"file":"static/js/247.6c3c8fe0.chunk.js","mappings":"6OACA,EAAuB,uBAAvB,EAAqD,uB,SCcrD,EAdiB,SAAC,GAAiC,IAA/BA,EAA8B,EAA9BA,YAAaC,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,KAGrC,OACE,2BACE,gBACEC,IAAKH,EALQ,kCAKmBA,EAJf,kCAKjBI,IAAKH,KAEP,cAAGI,UAAWC,EAAd,SAAyBL,KACzB,eAAGI,UAAWC,EAAd,wBAAoCJ,OAGzC,ECbD,EAAuB,mBCoDvB,EAhDa,WACX,IAIQK,GADOC,EAAAA,EAAAA,MACPD,QAER,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KAsBA,OApBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,sGAEdF,GAAW,GAFG,SAGSG,MAAM,GAAD,OAblB,+BAakB,kBACNT,EADM,4BAZnB,mCAYmB,qBAXjB,UAQG,cAGRU,EAHQ,gBAMSA,EAASC,OANlB,OAMRC,EANQ,OAOdC,QAAQC,IAAIF,GACZR,EAAQQ,EAAST,MARH,kDAUdU,QAAQC,IAAR,MAVc,yBAYdR,GAAW,GAZG,6EAAH,qDAgBfE,GACD,GAAE,CAACR,IAEAK,GACK,uCAIP,eAAIP,UAAWC,EAAf,SACGI,EAAKY,KAAI,SAAAC,GAAK,OACb,SAAC,EAAD,CAEEvB,YAAauB,EAAMC,aACnBvB,KAAMsB,EAAME,cACZvB,KAAMqB,EAAMG,WAHPH,EAAMI,GAFA,KAUpB,C,sBCnDD,SAASC,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAOC,GAEP,YADAP,EAAOO,EAET,CAEIF,EAAKG,KACPT,EAAQO,GAERG,QAAQV,QAAQO,GAAOI,KAAKT,EAAOC,EAEvC,CAEe,SAASS,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIP,SAAQ,SAAUV,EAASC,GACpC,IAAIF,EAAMc,EAAGK,MAAMJ,EAAME,GAEzB,SAASd,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CAEA,SAASJ,EAAOgB,GACdrB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASgB,EACnE,CAEAjB,OAAMkB,EACR,GACF,CACF,C","sources":["webpack://react-homework-template/./src/components/CastCard/CastCard.module.css?6050","components/CastCard/CastCard.js","webpack://react-homework-template/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"name\":\"CastCard_name__RIPkU\",\"role\":\"CastCard_role__AgwBx\"};","import css from './CastCard.module.css';\nconst CastCard = ({ profilePath, name, role }) => {\n  const baseImgURL = 'https://image.tmdb.org/t/p/w200';\n  const placeholderImg = 'https://via.placeholder.com/200';\n  return (\n    <li>\n      <img\n        src={profilePath ? baseImgURL + profilePath : placeholderImg}\n        alt={name}\n      />\n      <p className={css.name}>{name}</p>\n      <p className={css.role}>Character: {role}</p>\n    </li>\n  );\n};\nexport default CastCard;\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"Cast_list__GlWio\"};","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport CastCard from 'components/CastCard/CastCard';\nimport css from './Cast.module.css';\n\nconst Cast = () => {\n  const baseURL = 'https://api.themoviedb.org/3';\n  const apiKey = 'acee11b4b18b6e03b694743e5006f3ac';\n  const language = 'en-US';\n  const params = useParams();\n  const { movieId } = params;\n\n  const [cast, setCast] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const fetchCast = async () => {\n      try {\n        setLoading(true);\n        const response = await fetch(\n          `${baseURL}/movie/${movieId}/credits?api_key=${apiKey}&language=${language}`\n        );\n        const castData = await response.json();\n        console.log(castData);\n        setCast(castData.cast);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchCast();\n  }, [movieId]);\n\n  if (loading) {\n    return <p>Loading...</p>;\n  }\n\n  return (\n    <ul className={css.list}>\n      {cast.map(actor => (\n        <CastCard\n          key={actor.id}\n          profilePath={actor.profile_path}\n          name={actor.original_name}\n          role={actor.character}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default Cast;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["profilePath","name","role","src","alt","className","css","movieId","useParams","useState","cast","setCast","loading","setLoading","useEffect","fetchCast","fetch","response","json","castData","console","log","map","actor","profile_path","original_name","character","id","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}